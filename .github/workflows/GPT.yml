name: gpt_service

on:
  push:
    branches:
      - "master"

env:
  SERVICE_NAME: gptalexa
  SERVICE_VERSION: latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configurar el caché de capas de Docker para acelerar las construcciones futuras
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        run: |
          echo "Iniciando construcción de la imagen..."
          # Construir y etiquetar la imagen con Docker Buildx
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USER }}/${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }} .

          echo "Etiquetando la imagen para GitHub Container Registry..."
          # Etiquetar la imagen para GitHub Container Registry
          docker tag ${{ secrets.DOCKER_USER }}/${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }} ghcr.io/${{ github.repository_owner }}/${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }}

          echo "Empujando las imágenes a Docker Hub y GitHub Container Registry..."
          # Hacer push de las imágenes a Docker Hub y GitHub Container Registry
          docker push ${{ secrets.DOCKER_USER }}/${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }}
        env:
          DOCKER_CLI_ACI_OFFLINE: 1  # Deshabilitar el uso de Docker Analytics

      - name: Cleanup
        run: |
          # Eliminar el caché de Buildx para liberar espacio
          docker buildx prune --all --force
