name: gpt_service

on:
  push:
    branches:
      - "master"

env:
  SERVICE_NAME: gptalexa
  SERVICE_VERSION: latest

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Configurar el cach√© de capas de Docker para acelerar las construcciones futuras
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        run: |
          echo "üî® Building Docker image..."
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }} .
          echo "‚úÖ Image built successfully."

          echo "üè∑Ô∏è Tagging the image for Docker Hub..."
          docker tag ${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }} ${{ secrets.DOCKER_USER }}/${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }}
          echo "‚úÖ Image tagged for Docker Hub."

          echo "üè∑Ô∏è Tagging the image for GitHub Container Registry..."
          docker tag ${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }} ghcr.io/${{ github.repository_owner }}/${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }}
          echo "‚úÖ Image tagged for GitHub Container Registry."

          echo "üöÄ Pushing images to Docker Hub and GitHub Container Registry..."
          docker push ${{ secrets.DOCKER_USER }}/${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.SERVICE_NAME }}:${{ env.SERVICE_VERSION }}
          echo "‚úÖ Image pushed to Docker Hub and GitHub Container Registry successfully."

        env:
          DOCKER_CLI_ACI_OFFLINE: 1  # Deshabilitar el uso de Docker Analytics

      - name: Cleanup
        run: |
          echo "üßπ Cleaning up..."
          # Eliminar el cach√© de Buildx para liberar espacio
          docker buildx prune --all --force
          echo "‚úÖ Cleanup completed."
